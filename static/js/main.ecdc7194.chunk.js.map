{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectedGoodsArray","chooseItemHandler","item","push","setState","prevState","RemoveItemHandler","indexItem","indexOf","splice","this","SelectedValues","length","className","Button","type","onClick","resetSelectedItems","ListGroup","as","map","ListGroupItem","classNames","active","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAe,CACbC,aAAc,GACdC,mBAAoB,IAHxB,EAMEC,kBAAoB,SAACC,GACnB,EAAKJ,MAAME,mBAAmBG,KAAKD,GACnC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BN,aAAa,GAAD,OAAKM,EAAUL,mBAAf,qBATlB,EAaEM,kBAAoB,SAACJ,GACnB,IAAMK,EAAY,EAAKT,MAAME,mBAAmBQ,QAAQN,IAErC,IAAfK,IAIJ,EAAKT,MAAME,mBAAmBS,OAAOF,EAAW,GAChD,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BN,aAAa,GAAD,OAAKM,EAAUL,mBAAf,sBAtBlB,wDA0BE,WACEU,KAAKN,SAAS,CACZL,aAAc,GACdC,mBAAoB,OA7B1B,oBAiCE,WAAU,IAAD,OACP,EAA6CU,KAAKZ,MAA1CC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,mBAClBW,EAAiB,GAErB,OAAQX,EAAmBY,QACzB,KAAK,EACHD,EAAc,UAAMX,EAAN,gBACd,MAEF,KAAK,EACHW,EAAc,UAAMX,EAAmB,GAAzB,gBAAmCA,EAAmB,GAAtD,iBACd,MAEF,KAAK,EACHW,EAAc,UAAMX,EAAmB,GAAzB,YAA+BA,EAAmB,GAAlD,iBAA6DA,EAAmB,GAAhF,iBACd,MACF,KAAK,EACHW,EAAiB,oBACjB,MAEF,QACEA,EAAc,UAAMX,EAAN,iBAIlB,OACE,sBAAKa,UAAU,MAAf,UACE,+BACoB,KAAjBd,EACG,oBADH,UAEMY,GACNX,EAAmBY,OAAS,EAEzB,cAACE,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,kBACP,EAAKC,sBAHT,eASC,MAEP,cAACC,EAAA,EAAD,CACEC,GAAG,KADL,SAGGvB,EAAgBwB,KAAI,SAAClB,GAAD,OACnB,eAACmB,EAAA,EAAD,CACER,UAAWS,IACT,oDACA,CACEC,QAAyD,IAAjD,EAAKzB,MAAME,mBAAmBwB,SAAStB,KAGnDiB,GAAG,KAPL,UAUGjB,EACD,gCACE,cAACY,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,WACP,EAAKf,kBAAkBC,IAH3B,iBAQA,cAACY,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,WACP,EAAKV,kBAAkBJ,IAH3B,yBAZGA,eAzFnB,GAAyBuB,IAAMC,WAsHhB7B,IC3If8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecdc7194.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { Button, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n  selectedGoodsArray: string[]\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: '',\n    selectedGoodsArray: [],\n  };\n\n  chooseItemHandler = (item: string) => {\n    this.state.selectedGoodsArray.push(item);\n    this.setState(prevState => ({\n      selectedGood: `${prevState.selectedGoodsArray} is selected`,\n    }));\n  };\n\n  RemoveItemHandler = (item: string) => {\n    const indexItem = this.state.selectedGoodsArray.indexOf(item);\n\n    if (indexItem === -1) {\n      return;\n    }\n\n    this.state.selectedGoodsArray.splice(indexItem, 1);\n    this.setState(prevState => ({\n      selectedGood: `${prevState.selectedGoodsArray} is selected`,\n    }));\n  };\n\n  resetSelectedItems() {\n    this.setState({\n      selectedGood: '',\n      selectedGoodsArray: [],\n    });\n  }\n\n  render() {\n    const { selectedGood, selectedGoodsArray } = this.state;\n    let SelectedValues = '';\n\n    switch (selectedGoodsArray.length) {\n      case 1:\n        SelectedValues = `${selectedGoodsArray} is selected`;\n        break;\n\n      case 2:\n        SelectedValues = `${selectedGoodsArray[0]} and ${selectedGoodsArray[1]} are selected`;\n        break;\n\n      case 3:\n        SelectedValues = `${selectedGoodsArray[0]},${selectedGoodsArray[1]}  and ${selectedGoodsArray[2]} are selected`;\n        break;\n      case 0:\n        SelectedValues = 'No items selected';\n        break;\n\n      default:\n        SelectedValues = `${selectedGoodsArray} are selected`;\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGood === ''\n            ? 'No items selected'\n            : `${SelectedValues}`}\n          {selectedGoodsArray.length > 0\n            ? (\n              <Button\n                type=\"button\"\n                onClick={() => (\n                  this.resetSelectedItems()\n                )}\n              >\n                X\n              </Button>\n            )\n            : ('')}\n        </h1>\n        <ListGroup\n          as=\"ul\"\n        >\n          {goodsFromServer.map((item: string) => (\n            <ListGroupItem\n              className={classNames(\n                'd-flex justify-content-between align-items-center',\n                {\n                  active: this.state.selectedGoodsArray.includes(item) === true,\n                },\n              )}\n              as=\"li\"\n              key={item}\n            >\n              {item}\n              <div>\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    this.chooseItemHandler(item);\n                  }}\n                >\n                  Add\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    this.RemoveItemHandler(item);\n                  }}\n                >\n                  Remove\n                </Button>\n              </div>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}