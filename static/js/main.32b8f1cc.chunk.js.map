{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","chooseItemHandler","item","includes","setState","prevState","RemoveItemHandler","filter","element","this","SelectedValues","length","className","join","Button","type","onClick","resetSelectedItems","ListGroup","as","map","ListGroupItem","classNames","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mSAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,cAAe,IAFnB,EAKEC,kBAAoB,SAACC,GACb,EAAKH,MAAMC,cAAcG,SAASD,IACtC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAc,GAAD,mBAAMK,EAAUL,eAAhB,CAA+BE,SARpD,EAaEI,kBAAoB,SAACJ,GACnB,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAeK,EAAUL,cAAcO,QAAO,SAAAC,GAAO,OAAIA,IAAYN,UAf3E,wDAmBE,WACEO,KAAKL,SAAS,CACZJ,cAAe,OArBrB,oBAyBE,WAAU,IAAD,OACCA,EAAkBS,KAAKV,MAAvBC,cACJU,EAAiB,GAErB,OAAQV,EAAcW,QACpB,KAAK,EACHD,EAAc,UAAMV,EAAN,gBACd,MAEF,KAAK,EACHU,EAAc,UAAMV,EAAc,GAApB,gBAA8BA,EAAc,GAA5C,iBACd,MAEF,KAAK,EACHU,EAAc,UAAMV,EAAc,GAApB,YAA0BA,EAAc,GAAxC,iBAAmDA,EAAc,GAAjE,iBACd,MACF,KAAK,EACHU,EAAiB,oBACjB,MAEF,QACEA,EAAc,UAAMV,EAAN,iBAIlB,OACE,sBAAKY,UAAU,MAAf,UACE,+BAC8B,KAA3BZ,EAAca,KAAK,IAChB,oBADH,UAEMH,GACNV,EAAcW,OAAS,EAEpB,cAACG,EAAA,EAAD,CACEC,KAAK,SACLH,UAAU,iBACVI,QAAS,kBACP,EAAKC,sBAJT,eAUC,MAEP,cAACC,EAAA,EAAD,CACEC,GAAG,KADL,SAGGtB,EAAgBuB,KAAI,SAAClB,GAAD,OACnB,eAACmB,EAAA,EAAD,CACET,UAAWU,IACT,oDACA,CACEC,OAAS,EAAKxB,MAAMC,cAAcG,SAASD,KAG/CiB,GAAG,KAPL,UAUGjB,EACD,gCACE,cAACY,EAAA,EAAD,CACEC,KAAK,SACLH,UAAU,4BACVI,QAAS,WACP,EAAKf,kBAAkBC,IAJ3B,iBASA,cAACY,EAAA,EAAD,CACEC,KAAK,SACLH,UAAU,iBACVI,QAAS,WACP,EAAKV,kBAAkBJ,IAJ3B,yBAbGA,eAlFnB,GAAyBsB,IAAMC,WAiHhB3B,ICrIf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.32b8f1cc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { Button, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  chooseItemHandler = (item: string) => {\n    if (!(this.state.selectedGoods.includes(item))) {\n      this.setState(prevState => ({\n        selectedGoods: [...prevState.selectedGoods, item],\n      }));\n    }\n  };\n\n  RemoveItemHandler = (item: string) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(element => element !== item),\n    }));\n  };\n\n  resetSelectedItems() {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    let SelectedValues = '';\n\n    switch (selectedGoods.length) {\n      case 1:\n        SelectedValues = `${selectedGoods} is selected`;\n        break;\n\n      case 2:\n        SelectedValues = `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n        break;\n\n      case 3:\n        SelectedValues = `${selectedGoods[0]},${selectedGoods[1]}  and ${selectedGoods[2]} are selected`;\n        break;\n      case 0:\n        SelectedValues = 'No items selected';\n        break;\n\n      default:\n        SelectedValues = `${selectedGoods} are selected`;\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGoods.join('') === ''\n            ? 'No items selected'\n            : `${SelectedValues}`}\n          {selectedGoods.length > 0\n            ? (\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => (\n                  this.resetSelectedItems()\n                )}\n              >\n                X\n              </Button>\n            )\n            : ('')}\n        </h1>\n        <ListGroup\n          as=\"ul\"\n        >\n          {goodsFromServer.map((item: string) => (\n            <ListGroupItem\n              className={classNames(\n                'd-flex justify-content-between align-items-center',\n                {\n                  active: (this.state.selectedGoods.includes(item)),\n                },\n              )}\n              as=\"li\"\n              key={item}\n            >\n              {item}\n              <div>\n                <Button\n                  type=\"button\"\n                  className=\"addButton btn btn-success\"\n                  onClick={() => {\n                    this.chooseItemHandler(item);\n                  }}\n                >\n                  Add\n                </Button>\n                <Button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => {\n                    this.RemoveItemHandler(item);\n                  }}\n                >\n                  Remove\n                </Button>\n              </div>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}